global Data
Data = [];
nlc = [];
lc = [];
out = [];
exit = [];

% do a Fourier transform filtering
chiunfiltered = chi;
fchi = fft(chi.');
cutoffval = 52;
wid = 5;
clear filt
filt(:,1) = 1./(1 + exp(((1:400)' - cutoffval)./wid));
filt = [1; filt; flipud(filt)];
sz = size(fchi);
filtfchi = zeros(sz);
for n = 1:sz(2)
  filtfchi(:,n) = filt.*fchi(:,n);
end
chi = (ifft(filtfchi)).';
trunc = find(freq(1,:) > 3.6e9);
freq(:,trunc) = [];
chi(:,trunc) = [];

range = find(freq(1,:) > 1e9);
sz = size(chi);
for n = 1:sz(1)
  H = field(n);
  sprintf('%s%s\t%s%s\t%s%s','line: ',num2str(n),'field: ',num2str(H),'thickness: ',num2str(thick(n)))
  if thick(n) > 400e-10
    if H > 40
      range = find(freq(n,:) > 1e9);
    elseif H > 0
      range = find(freq(n,:) > 8e8);
    elseif H == 0
      range = find(freq(n,:) > 5e8);
    else
      sprintf('%s','There is a problem with the range to fit');
    end
  else
    switch H
      case 90
        range = find(freq(n,:) > 2.4e9);
      case 80
        range = find(freq(n,:) > 2.2e9);
      case 70
        range = find(freq(n,:) > 2e9);
      case 60
        range = find(freq(n,:) > 1.95e9);
      case 50
        range = find(freq(n,:) > 1.85e9);
      case 40
        range = find(freq(n,:) > 1.52e9);
      case 30
        range = find(freq(n,:) > 1.39e9);
      case 20
        range = find(freq(n,:) > 1.06e9);
      case 10
        range = find(freq(n,:) > 0.8e9);
      case 0
        range = find(freq(n,:) > 0.5e9);
      otherwise
        range = find(freq(n,:) > 1e9);
        disp('There is a problem with your field value!');
    end
  end
    
  Data = [];
%  Data = [(freq(n,range(n,1):range(n,2))).' (chi(n,range(n,1):range(n,2))).'];
  Data = [(freq(n,range')).' (chi(n,range')).'];
  chifit;
  nlc = [nlc lambda'];
  lc = [lc; kshape];
  out = [out; output];
  exit = [exit; exitflag];
end

%electron constants in cgs units
echarge = 4.803e-10;
emass = 9.109e-28;
cspeed = 2.9979e10;
egamma = -echarge/(emass*cspeed);

for n = 1:sz(1)
  wtmp = omegar(nlc(1,n),nlc(3,n),field(n),nlc(2,n)/Ms,4*pi+nlc(2,n)/Ms);
  wres(n,:) = abs(real(wtmp(1)));
  wtmp = omegar(egamma,0,field(n),8/Ms,4*pi+8/Ms);
  wthe(n,:) = abs(real(wtmp(1)));   %theoretical wFMR
end



