# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _comedi
else:
    import _comedi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


CR_FLAGS_MASK = _comedi.CR_FLAGS_MASK
CR_INVERT = _comedi.CR_INVERT
TRIG_ANY = _comedi.TRIG_ANY
NI_GPCT_INVERT_CLOCK_SRC_BIT = _comedi.NI_GPCT_INVERT_CLOCK_SRC_BIT

def cr_pack(chan, rng, aref):
    return _comedi.cr_pack(chan, rng, aref)

def cr_pack_flags(chan, rng, aref, flags):
    return _comedi.cr_pack_flags(chan, rng, aref, flags)

def cr_chan(a):
    return _comedi.cr_chan(a)

def cr_range(a):
    return _comedi.cr_range(a)

def cr_aref(a):
    return _comedi.cr_aref(a)

def CR_PACK(chan, rng, aref):
    return _comedi.CR_PACK(chan, rng, aref)

def CR_PACK_FLAGS(chan, rng, aref, flags):
    return _comedi.CR_PACK_FLAGS(chan, rng, aref, flags)

def CR_CHAN(chan):
    return _comedi.CR_CHAN(chan)

def CR_RANGE(chan):
    return _comedi.CR_RANGE(chan)

def CR_AREF(chan):
    return _comedi.CR_AREF(chan)

def NI_USUAL_PFI_SELECT(pfi_channel):
    return _comedi.NI_USUAL_PFI_SELECT(pfi_channel)

def NI_USUAL_RTSI_SELECT(rtsi_channel):
    return _comedi.NI_USUAL_RTSI_SELECT(rtsi_channel)

def NI_GPCT_SOURCE_PIN_CLOCK_SRC_BITS(n):
    return _comedi.NI_GPCT_SOURCE_PIN_CLOCK_SRC_BITS(n)

def NI_GPCT_RTSI_CLOCK_SRC_BITS(n):
    return _comedi.NI_GPCT_RTSI_CLOCK_SRC_BITS(n)

def NI_GPCT_PFI_CLOCK_SRC_BITS(n):
    return _comedi.NI_GPCT_PFI_CLOCK_SRC_BITS(n)

def NI_GPCT_GATE_PIN_GATE_SELECT(n):
    return _comedi.NI_GPCT_GATE_PIN_GATE_SELECT(n)

def NI_GPCT_RTSI_GATE_SELECT(n):
    return _comedi.NI_GPCT_RTSI_GATE_SELECT(n)

def NI_GPCT_PFI_GATE_SELECT(n):
    return _comedi.NI_GPCT_PFI_GATE_SELECT(n)

def NI_GPCT_UP_DOWN_PIN_GATE_SELECT(n):
    return _comedi.NI_GPCT_UP_DOWN_PIN_GATE_SELECT(n)

def NI_GPCT_PFI_OTHER_SELECT(n):
    return _comedi.NI_GPCT_PFI_OTHER_SELECT(n)

def NI_MIO_PLL_RTSI_CLOCK(rtsi_channel):
    return _comedi.NI_MIO_PLL_RTSI_CLOCK(rtsi_channel)

def NI_RTSI_OUTPUT_RTSI_BRD(n):
    return _comedi.NI_RTSI_OUTPUT_RTSI_BRD(n)

def NI_PFI_OUTPUT_RTSI(rtsi_channel):
    return _comedi.NI_PFI_OUTPUT_RTSI(rtsi_channel)

def NI_EXT_PFI(pfi_channel):
    return _comedi.NI_EXT_PFI(pfi_channel)

def NI_EXT_RTSI(rtsi_channel):
    return _comedi.NI_EXT_RTSI(rtsi_channel)

def NI_CDIO_SCAN_BEGIN_SRC_PFI(pfi_channel):
    return _comedi.NI_CDIO_SCAN_BEGIN_SRC_PFI(pfi_channel)

def NI_CDIO_SCAN_BEGIN_SRC_RTSI(rtsi_channel):
    return _comedi.NI_CDIO_SCAN_BEGIN_SRC_RTSI(rtsi_channel)

def NI_AO_SCAN_BEGIN_SRC_PFI(pfi_channel):
    return _comedi.NI_AO_SCAN_BEGIN_SRC_PFI(pfi_channel)

def NI_AO_SCAN_BEGIN_SRC_RTSI(rtsi_channel):
    return _comedi.NI_AO_SCAN_BEGIN_SRC_RTSI(rtsi_channel)

def NI_PFI(channel):
    return _comedi.NI_PFI(channel)

def TRIGGER_LINE(channel):
    return _comedi.TRIGGER_LINE(channel)

def NI_RTSI_BRD(channel):
    return _comedi.NI_RTSI_BRD(channel)

def NI_CtrSource(channel):
    return _comedi.NI_CtrSource(channel)

def NI_CtrGate(channel):
    return _comedi.NI_CtrGate(channel)

def NI_CtrAux(channel):
    return _comedi.NI_CtrAux(channel)

def NI_CtrA(channel):
    return _comedi.NI_CtrA(channel)

def NI_CtrB(channel):
    return _comedi.NI_CtrB(channel)

def NI_CtrZ(channel):
    return _comedi.NI_CtrZ(channel)

def NI_CtrArmStartTrigger(channel):
    return _comedi.NI_CtrArmStartTrigger(channel)

def NI_CtrInternalOutput(channel):
    return _comedi.NI_CtrInternalOutput(channel)

def NI_CtrOut(channel):
    return _comedi.NI_CtrOut(channel)
COMEDI_MAJOR = _comedi.COMEDI_MAJOR
COMEDI_NDEVICES = _comedi.COMEDI_NDEVICES
COMEDI_NDEVCONFOPTS = _comedi.COMEDI_NDEVCONFOPTS
COMEDI_DEVCONF_AUX_DATA3_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA3_LENGTH
COMEDI_DEVCONF_AUX_DATA2_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA2_LENGTH
COMEDI_DEVCONF_AUX_DATA1_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA1_LENGTH
COMEDI_DEVCONF_AUX_DATA0_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA0_LENGTH
COMEDI_DEVCONF_AUX_DATA_HI = _comedi.COMEDI_DEVCONF_AUX_DATA_HI
COMEDI_DEVCONF_AUX_DATA_LO = _comedi.COMEDI_DEVCONF_AUX_DATA_LO
COMEDI_DEVCONF_AUX_DATA_LENGTH = _comedi.COMEDI_DEVCONF_AUX_DATA_LENGTH
COMEDI_NAMELEN = _comedi.COMEDI_NAMELEN
CR_ALT_FILTER = _comedi.CR_ALT_FILTER
CR_DITHER = _comedi.CR_DITHER
CR_DEGLITCH = _comedi.CR_DEGLITCH
CR_ALT_SOURCE = _comedi.CR_ALT_SOURCE
CR_EDGE = _comedi.CR_EDGE
AREF_GROUND = _comedi.AREF_GROUND
AREF_COMMON = _comedi.AREF_COMMON
AREF_DIFF = _comedi.AREF_DIFF
AREF_OTHER = _comedi.AREF_OTHER
GPCT_RESET = _comedi.GPCT_RESET
GPCT_SET_SOURCE = _comedi.GPCT_SET_SOURCE
GPCT_SET_GATE = _comedi.GPCT_SET_GATE
GPCT_SET_DIRECTION = _comedi.GPCT_SET_DIRECTION
GPCT_SET_OPERATION = _comedi.GPCT_SET_OPERATION
GPCT_ARM = _comedi.GPCT_ARM
GPCT_DISARM = _comedi.GPCT_DISARM
GPCT_GET_INT_CLK_FRQ = _comedi.GPCT_GET_INT_CLK_FRQ
GPCT_INT_CLOCK = _comedi.GPCT_INT_CLOCK
GPCT_EXT_PIN = _comedi.GPCT_EXT_PIN
GPCT_NO_GATE = _comedi.GPCT_NO_GATE
GPCT_UP = _comedi.GPCT_UP
GPCT_DOWN = _comedi.GPCT_DOWN
GPCT_HWUD = _comedi.GPCT_HWUD
GPCT_SIMPLE_EVENT = _comedi.GPCT_SIMPLE_EVENT
GPCT_SINGLE_PERIOD = _comedi.GPCT_SINGLE_PERIOD
GPCT_SINGLE_PW = _comedi.GPCT_SINGLE_PW
GPCT_CONT_PULSE_OUT = _comedi.GPCT_CONT_PULSE_OUT
GPCT_SINGLE_PULSE_OUT = _comedi.GPCT_SINGLE_PULSE_OUT
INSN_MASK_WRITE = _comedi.INSN_MASK_WRITE
INSN_MASK_READ = _comedi.INSN_MASK_READ
INSN_MASK_SPECIAL = _comedi.INSN_MASK_SPECIAL
INSN_READ = _comedi.INSN_READ
INSN_WRITE = _comedi.INSN_WRITE
INSN_BITS = _comedi.INSN_BITS
INSN_CONFIG = _comedi.INSN_CONFIG
INSN_DEVICE_CONFIG = _comedi.INSN_DEVICE_CONFIG
INSN_GTOD = _comedi.INSN_GTOD
INSN_WAIT = _comedi.INSN_WAIT
INSN_INTTRIG = _comedi.INSN_INTTRIG
CMDF_BOGUS = _comedi.CMDF_BOGUS
CMDF_PRIORITY = _comedi.CMDF_PRIORITY
CMDF_WAKE_EOS = _comedi.CMDF_WAKE_EOS
CMDF_WRITE = _comedi.CMDF_WRITE
CMDF_RAWDATA = _comedi.CMDF_RAWDATA
CMDF_ROUND_MASK = _comedi.CMDF_ROUND_MASK
CMDF_ROUND_NEAREST = _comedi.CMDF_ROUND_NEAREST
CMDF_ROUND_DOWN = _comedi.CMDF_ROUND_DOWN
CMDF_ROUND_UP = _comedi.CMDF_ROUND_UP
CMDF_ROUND_UP_NEXT = _comedi.CMDF_ROUND_UP_NEXT
COMEDI_EV_START = _comedi.COMEDI_EV_START
COMEDI_EV_SCAN_BEGIN = _comedi.COMEDI_EV_SCAN_BEGIN
COMEDI_EV_CONVERT = _comedi.COMEDI_EV_CONVERT
COMEDI_EV_SCAN_END = _comedi.COMEDI_EV_SCAN_END
COMEDI_EV_STOP = _comedi.COMEDI_EV_STOP
TRIG_BOGUS = _comedi.TRIG_BOGUS
TRIG_RT = _comedi.TRIG_RT
TRIG_WAKE_EOS = _comedi.TRIG_WAKE_EOS
TRIG_WRITE = _comedi.TRIG_WRITE
TRIG_ROUND_MASK = _comedi.TRIG_ROUND_MASK
TRIG_ROUND_NEAREST = _comedi.TRIG_ROUND_NEAREST
TRIG_ROUND_DOWN = _comedi.TRIG_ROUND_DOWN
TRIG_ROUND_UP = _comedi.TRIG_ROUND_UP
TRIG_ROUND_UP_NEXT = _comedi.TRIG_ROUND_UP_NEXT
TRIG_INVALID = _comedi.TRIG_INVALID
TRIG_NONE = _comedi.TRIG_NONE
TRIG_NOW = _comedi.TRIG_NOW
TRIG_FOLLOW = _comedi.TRIG_FOLLOW
TRIG_TIME = _comedi.TRIG_TIME
TRIG_TIMER = _comedi.TRIG_TIMER
TRIG_COUNT = _comedi.TRIG_COUNT
TRIG_EXT = _comedi.TRIG_EXT
TRIG_INT = _comedi.TRIG_INT
TRIG_OTHER = _comedi.TRIG_OTHER
SDF_BUSY = _comedi.SDF_BUSY
SDF_BUSY_OWNER = _comedi.SDF_BUSY_OWNER
SDF_LOCKED = _comedi.SDF_LOCKED
SDF_LOCK_OWNER = _comedi.SDF_LOCK_OWNER
SDF_MAXDATA = _comedi.SDF_MAXDATA
SDF_FLAGS = _comedi.SDF_FLAGS
SDF_RANGETYPE = _comedi.SDF_RANGETYPE
SDF_PWM_COUNTER = _comedi.SDF_PWM_COUNTER
SDF_PWM_HBRIDGE = _comedi.SDF_PWM_HBRIDGE
SDF_CMD = _comedi.SDF_CMD
SDF_SOFT_CALIBRATED = _comedi.SDF_SOFT_CALIBRATED
SDF_CMD_WRITE = _comedi.SDF_CMD_WRITE
SDF_CMD_READ = _comedi.SDF_CMD_READ
SDF_READABLE = _comedi.SDF_READABLE
SDF_WRITABLE = _comedi.SDF_WRITABLE
SDF_WRITEABLE = _comedi.SDF_WRITEABLE
SDF_INTERNAL = _comedi.SDF_INTERNAL
SDF_GROUND = _comedi.SDF_GROUND
SDF_COMMON = _comedi.SDF_COMMON
SDF_DIFF = _comedi.SDF_DIFF
SDF_OTHER = _comedi.SDF_OTHER
SDF_DITHER = _comedi.SDF_DITHER
SDF_DEGLITCH = _comedi.SDF_DEGLITCH
SDF_MMAP = _comedi.SDF_MMAP
SDF_RUNNING = _comedi.SDF_RUNNING
SDF_LSAMPL = _comedi.SDF_LSAMPL
SDF_PACKED = _comedi.SDF_PACKED
COMEDI_SUBD_UNUSED = _comedi.COMEDI_SUBD_UNUSED
COMEDI_SUBD_AI = _comedi.COMEDI_SUBD_AI
COMEDI_SUBD_AO = _comedi.COMEDI_SUBD_AO
COMEDI_SUBD_DI = _comedi.COMEDI_SUBD_DI
COMEDI_SUBD_DO = _comedi.COMEDI_SUBD_DO
COMEDI_SUBD_DIO = _comedi.COMEDI_SUBD_DIO
COMEDI_SUBD_COUNTER = _comedi.COMEDI_SUBD_COUNTER
COMEDI_SUBD_TIMER = _comedi.COMEDI_SUBD_TIMER
COMEDI_SUBD_MEMORY = _comedi.COMEDI_SUBD_MEMORY
COMEDI_SUBD_CALIB = _comedi.COMEDI_SUBD_CALIB
COMEDI_SUBD_PROC = _comedi.COMEDI_SUBD_PROC
COMEDI_SUBD_SERIAL = _comedi.COMEDI_SUBD_SERIAL
COMEDI_SUBD_PWM = _comedi.COMEDI_SUBD_PWM
COMEDI_INPUT = _comedi.COMEDI_INPUT
COMEDI_OUTPUT = _comedi.COMEDI_OUTPUT
COMEDI_OPENDRAIN = _comedi.COMEDI_OPENDRAIN
INSN_CONFIG_DIO_INPUT = _comedi.INSN_CONFIG_DIO_INPUT
INSN_CONFIG_DIO_OUTPUT = _comedi.INSN_CONFIG_DIO_OUTPUT
INSN_CONFIG_DIO_OPENDRAIN = _comedi.INSN_CONFIG_DIO_OPENDRAIN
INSN_CONFIG_ANALOG_TRIG = _comedi.INSN_CONFIG_ANALOG_TRIG
INSN_CONFIG_ALT_SOURCE = _comedi.INSN_CONFIG_ALT_SOURCE
INSN_CONFIG_DIGITAL_TRIG = _comedi.INSN_CONFIG_DIGITAL_TRIG
INSN_CONFIG_BLOCK_SIZE = _comedi.INSN_CONFIG_BLOCK_SIZE
INSN_CONFIG_TIMER_1 = _comedi.INSN_CONFIG_TIMER_1
INSN_CONFIG_FILTER = _comedi.INSN_CONFIG_FILTER
INSN_CONFIG_CHANGE_NOTIFY = _comedi.INSN_CONFIG_CHANGE_NOTIFY
INSN_CONFIG_SERIAL_CLOCK = _comedi.INSN_CONFIG_SERIAL_CLOCK
INSN_CONFIG_BIDIRECTIONAL_DATA = _comedi.INSN_CONFIG_BIDIRECTIONAL_DATA
INSN_CONFIG_DIO_QUERY = _comedi.INSN_CONFIG_DIO_QUERY
INSN_CONFIG_PWM_OUTPUT = _comedi.INSN_CONFIG_PWM_OUTPUT
INSN_CONFIG_GET_PWM_OUTPUT = _comedi.INSN_CONFIG_GET_PWM_OUTPUT
INSN_CONFIG_ARM = _comedi.INSN_CONFIG_ARM
INSN_CONFIG_DISARM = _comedi.INSN_CONFIG_DISARM
INSN_CONFIG_GET_COUNTER_STATUS = _comedi.INSN_CONFIG_GET_COUNTER_STATUS
INSN_CONFIG_RESET = _comedi.INSN_CONFIG_RESET
INSN_CONFIG_GPCT_SINGLE_PULSE_GENERATOR = _comedi.INSN_CONFIG_GPCT_SINGLE_PULSE_GENERATOR
INSN_CONFIG_GPCT_PULSE_TRAIN_GENERATOR = _comedi.INSN_CONFIG_GPCT_PULSE_TRAIN_GENERATOR
INSN_CONFIG_GPCT_QUADRATURE_ENCODER = _comedi.INSN_CONFIG_GPCT_QUADRATURE_ENCODER
INSN_CONFIG_SET_GATE_SRC = _comedi.INSN_CONFIG_SET_GATE_SRC
INSN_CONFIG_GET_GATE_SRC = _comedi.INSN_CONFIG_GET_GATE_SRC
INSN_CONFIG_SET_CLOCK_SRC = _comedi.INSN_CONFIG_SET_CLOCK_SRC
INSN_CONFIG_GET_CLOCK_SRC = _comedi.INSN_CONFIG_GET_CLOCK_SRC
INSN_CONFIG_SET_OTHER_SRC = _comedi.INSN_CONFIG_SET_OTHER_SRC
INSN_CONFIG_GET_HARDWARE_BUFFER_SIZE = _comedi.INSN_CONFIG_GET_HARDWARE_BUFFER_SIZE
INSN_CONFIG_SET_COUNTER_MODE = _comedi.INSN_CONFIG_SET_COUNTER_MODE
INSN_CONFIG_8254_SET_MODE = _comedi.INSN_CONFIG_8254_SET_MODE
INSN_CONFIG_8254_READ_STATUS = _comedi.INSN_CONFIG_8254_READ_STATUS
INSN_CONFIG_SET_ROUTING = _comedi.INSN_CONFIG_SET_ROUTING
INSN_CONFIG_GET_ROUTING = _comedi.INSN_CONFIG_GET_ROUTING
INSN_CONFIG_PWM_SET_PERIOD = _comedi.INSN_CONFIG_PWM_SET_PERIOD
INSN_CONFIG_PWM_GET_PERIOD = _comedi.INSN_CONFIG_PWM_GET_PERIOD
INSN_CONFIG_GET_PWM_STATUS = _comedi.INSN_CONFIG_GET_PWM_STATUS
INSN_CONFIG_PWM_SET_H_BRIDGE = _comedi.INSN_CONFIG_PWM_SET_H_BRIDGE
INSN_CONFIG_PWM_GET_H_BRIDGE = _comedi.INSN_CONFIG_PWM_GET_H_BRIDGE
INSN_CONFIG_GET_CMD_TIMING_CONSTRAINTS = _comedi.INSN_CONFIG_GET_CMD_TIMING_CONSTRAINTS
INSN_DEVICE_CONFIG_TEST_ROUTE = _comedi.INSN_DEVICE_CONFIG_TEST_ROUTE
INSN_DEVICE_CONFIG_CONNECT_ROUTE = _comedi.INSN_DEVICE_CONFIG_CONNECT_ROUTE
INSN_DEVICE_CONFIG_DISCONNECT_ROUTE = _comedi.INSN_DEVICE_CONFIG_DISCONNECT_ROUTE
INSN_DEVICE_CONFIG_GET_ROUTES = _comedi.INSN_DEVICE_CONFIG_GET_ROUTES
COMEDI_DIGITAL_TRIG_DISABLE = _comedi.COMEDI_DIGITAL_TRIG_DISABLE
COMEDI_DIGITAL_TRIG_ENABLE_EDGES = _comedi.COMEDI_DIGITAL_TRIG_ENABLE_EDGES
COMEDI_DIGITAL_TRIG_ENABLE_LEVELS = _comedi.COMEDI_DIGITAL_TRIG_ENABLE_LEVELS
COMEDI_UNKNOWN_SUPPORT = _comedi.COMEDI_UNKNOWN_SUPPORT
COMEDI_SUPPORTED = _comedi.COMEDI_SUPPORTED
COMEDI_UNSUPPORTED = _comedi.COMEDI_UNSUPPORTED
COMEDI_COUNTER_ARMED = _comedi.COMEDI_COUNTER_ARMED
COMEDI_COUNTER_COUNTING = _comedi.COMEDI_COUNTER_COUNTING
COMEDI_COUNTER_TERMINAL_COUNT = _comedi.COMEDI_COUNTER_TERMINAL_COUNT
CIO = _comedi.CIO
class comedi_insn_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    insn = property(_comedi.comedi_insn_struct_insn_get, _comedi.comedi_insn_struct_insn_set)
    n = property(_comedi.comedi_insn_struct_n_get, _comedi.comedi_insn_struct_n_set)
    data = property(_comedi.comedi_insn_struct_data_get, _comedi.comedi_insn_struct_data_set)
    subdev = property(_comedi.comedi_insn_struct_subdev_get, _comedi.comedi_insn_struct_subdev_set)
    chanspec = property(_comedi.comedi_insn_struct_chanspec_get, _comedi.comedi_insn_struct_chanspec_set)
    unused = property(_comedi.comedi_insn_struct_unused_get, _comedi.comedi_insn_struct_unused_set)

    def __init__(self):
        _comedi.comedi_insn_struct_swiginit(self, _comedi.new_comedi_insn_struct())
    __swig_destroy__ = _comedi.delete_comedi_insn_struct

# Register comedi_insn_struct in _comedi:
_comedi.comedi_insn_struct_swigregister(comedi_insn_struct)

class comedi_insnlist_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    n_insns = property(_comedi.comedi_insnlist_struct_n_insns_get, _comedi.comedi_insnlist_struct_n_insns_set)
    insns = property(_comedi.comedi_insnlist_struct_insns_get, _comedi.comedi_insnlist_struct_insns_set)

    def __init__(self):
        _comedi.comedi_insnlist_struct_swiginit(self, _comedi.new_comedi_insnlist_struct())
    __swig_destroy__ = _comedi.delete_comedi_insnlist_struct

# Register comedi_insnlist_struct in _comedi:
_comedi.comedi_insnlist_struct_swigregister(comedi_insnlist_struct)

class comedi_cmd_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdev = property(_comedi.comedi_cmd_struct_subdev_get, _comedi.comedi_cmd_struct_subdev_set)
    flags = property(_comedi.comedi_cmd_struct_flags_get, _comedi.comedi_cmd_struct_flags_set)
    start_src = property(_comedi.comedi_cmd_struct_start_src_get, _comedi.comedi_cmd_struct_start_src_set)
    start_arg = property(_comedi.comedi_cmd_struct_start_arg_get, _comedi.comedi_cmd_struct_start_arg_set)
    scan_begin_src = property(_comedi.comedi_cmd_struct_scan_begin_src_get, _comedi.comedi_cmd_struct_scan_begin_src_set)
    scan_begin_arg = property(_comedi.comedi_cmd_struct_scan_begin_arg_get, _comedi.comedi_cmd_struct_scan_begin_arg_set)
    convert_src = property(_comedi.comedi_cmd_struct_convert_src_get, _comedi.comedi_cmd_struct_convert_src_set)
    convert_arg = property(_comedi.comedi_cmd_struct_convert_arg_get, _comedi.comedi_cmd_struct_convert_arg_set)
    scan_end_src = property(_comedi.comedi_cmd_struct_scan_end_src_get, _comedi.comedi_cmd_struct_scan_end_src_set)
    scan_end_arg = property(_comedi.comedi_cmd_struct_scan_end_arg_get, _comedi.comedi_cmd_struct_scan_end_arg_set)
    stop_src = property(_comedi.comedi_cmd_struct_stop_src_get, _comedi.comedi_cmd_struct_stop_src_set)
    stop_arg = property(_comedi.comedi_cmd_struct_stop_arg_get, _comedi.comedi_cmd_struct_stop_arg_set)
    chanlist = property(_comedi.comedi_cmd_struct_chanlist_get, _comedi.comedi_cmd_struct_chanlist_set)
    chanlist_len = property(_comedi.comedi_cmd_struct_chanlist_len_get, _comedi.comedi_cmd_struct_chanlist_len_set)
    data = property(_comedi.comedi_cmd_struct_data_get, _comedi.comedi_cmd_struct_data_set)
    data_len = property(_comedi.comedi_cmd_struct_data_len_get, _comedi.comedi_cmd_struct_data_len_set)

    def __init__(self):
        _comedi.comedi_cmd_struct_swiginit(self, _comedi.new_comedi_cmd_struct())
    __swig_destroy__ = _comedi.delete_comedi_cmd_struct

# Register comedi_cmd_struct in _comedi:
_comedi.comedi_cmd_struct_swigregister(comedi_cmd_struct)

class comedi_chaninfo_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdev = property(_comedi.comedi_chaninfo_struct_subdev_get, _comedi.comedi_chaninfo_struct_subdev_set)
    maxdata_list = property(_comedi.comedi_chaninfo_struct_maxdata_list_get, _comedi.comedi_chaninfo_struct_maxdata_list_set)
    flaglist = property(_comedi.comedi_chaninfo_struct_flaglist_get, _comedi.comedi_chaninfo_struct_flaglist_set)
    rangelist = property(_comedi.comedi_chaninfo_struct_rangelist_get, _comedi.comedi_chaninfo_struct_rangelist_set)
    unused = property(_comedi.comedi_chaninfo_struct_unused_get, _comedi.comedi_chaninfo_struct_unused_set)

    def __init__(self):
        _comedi.comedi_chaninfo_struct_swiginit(self, _comedi.new_comedi_chaninfo_struct())
    __swig_destroy__ = _comedi.delete_comedi_chaninfo_struct

# Register comedi_chaninfo_struct in _comedi:
_comedi.comedi_chaninfo_struct_swigregister(comedi_chaninfo_struct)

class comedi_rangeinfo_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    range_type = property(_comedi.comedi_rangeinfo_struct_range_type_get, _comedi.comedi_rangeinfo_struct_range_type_set)
    range_ptr = property(_comedi.comedi_rangeinfo_struct_range_ptr_get, _comedi.comedi_rangeinfo_struct_range_ptr_set)

    def __init__(self):
        _comedi.comedi_rangeinfo_struct_swiginit(self, _comedi.new_comedi_rangeinfo_struct())
    __swig_destroy__ = _comedi.delete_comedi_rangeinfo_struct

# Register comedi_rangeinfo_struct in _comedi:
_comedi.comedi_rangeinfo_struct_swigregister(comedi_rangeinfo_struct)

class comedi_krange_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    min = property(_comedi.comedi_krange_struct_min_get, _comedi.comedi_krange_struct_min_set)
    max = property(_comedi.comedi_krange_struct_max_get, _comedi.comedi_krange_struct_max_set)
    flags = property(_comedi.comedi_krange_struct_flags_get, _comedi.comedi_krange_struct_flags_set)

    def __init__(self):
        _comedi.comedi_krange_struct_swiginit(self, _comedi.new_comedi_krange_struct())
    __swig_destroy__ = _comedi.delete_comedi_krange_struct

# Register comedi_krange_struct in _comedi:
_comedi.comedi_krange_struct_swigregister(comedi_krange_struct)

class comedi_subdinfo_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_comedi.comedi_subdinfo_struct_type_get, _comedi.comedi_subdinfo_struct_type_set)
    n_chan = property(_comedi.comedi_subdinfo_struct_n_chan_get, _comedi.comedi_subdinfo_struct_n_chan_set)
    subd_flags = property(_comedi.comedi_subdinfo_struct_subd_flags_get, _comedi.comedi_subdinfo_struct_subd_flags_set)
    timer_type = property(_comedi.comedi_subdinfo_struct_timer_type_get, _comedi.comedi_subdinfo_struct_timer_type_set)
    len_chanlist = property(_comedi.comedi_subdinfo_struct_len_chanlist_get, _comedi.comedi_subdinfo_struct_len_chanlist_set)
    maxdata = property(_comedi.comedi_subdinfo_struct_maxdata_get, _comedi.comedi_subdinfo_struct_maxdata_set)
    flags = property(_comedi.comedi_subdinfo_struct_flags_get, _comedi.comedi_subdinfo_struct_flags_set)
    range_type = property(_comedi.comedi_subdinfo_struct_range_type_get, _comedi.comedi_subdinfo_struct_range_type_set)
    settling_time_0 = property(_comedi.comedi_subdinfo_struct_settling_time_0_get, _comedi.comedi_subdinfo_struct_settling_time_0_set)
    insn_bits_support = property(_comedi.comedi_subdinfo_struct_insn_bits_support_get, _comedi.comedi_subdinfo_struct_insn_bits_support_set)
    unused = property(_comedi.comedi_subdinfo_struct_unused_get, _comedi.comedi_subdinfo_struct_unused_set)

    def __init__(self):
        _comedi.comedi_subdinfo_struct_swiginit(self, _comedi.new_comedi_subdinfo_struct())
    __swig_destroy__ = _comedi.delete_comedi_subdinfo_struct

# Register comedi_subdinfo_struct in _comedi:
_comedi.comedi_subdinfo_struct_swigregister(comedi_subdinfo_struct)

class comedi_devinfo_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    version_code = property(_comedi.comedi_devinfo_struct_version_code_get, _comedi.comedi_devinfo_struct_version_code_set)
    n_subdevs = property(_comedi.comedi_devinfo_struct_n_subdevs_get, _comedi.comedi_devinfo_struct_n_subdevs_set)
    driver_name = property(_comedi.comedi_devinfo_struct_driver_name_get, _comedi.comedi_devinfo_struct_driver_name_set)
    board_name = property(_comedi.comedi_devinfo_struct_board_name_get, _comedi.comedi_devinfo_struct_board_name_set)
    read_subdevice = property(_comedi.comedi_devinfo_struct_read_subdevice_get, _comedi.comedi_devinfo_struct_read_subdevice_set)
    write_subdevice = property(_comedi.comedi_devinfo_struct_write_subdevice_get, _comedi.comedi_devinfo_struct_write_subdevice_set)
    unused = property(_comedi.comedi_devinfo_struct_unused_get, _comedi.comedi_devinfo_struct_unused_set)

    def __init__(self):
        _comedi.comedi_devinfo_struct_swiginit(self, _comedi.new_comedi_devinfo_struct())
    __swig_destroy__ = _comedi.delete_comedi_devinfo_struct

# Register comedi_devinfo_struct in _comedi:
_comedi.comedi_devinfo_struct_swigregister(comedi_devinfo_struct)

class comedi_devconfig_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    board_name = property(_comedi.comedi_devconfig_struct_board_name_get, _comedi.comedi_devconfig_struct_board_name_set)
    options = property(_comedi.comedi_devconfig_struct_options_get, _comedi.comedi_devconfig_struct_options_set)

    def __init__(self):
        _comedi.comedi_devconfig_struct_swiginit(self, _comedi.new_comedi_devconfig_struct())
    __swig_destroy__ = _comedi.delete_comedi_devconfig_struct

# Register comedi_devconfig_struct in _comedi:
_comedi.comedi_devconfig_struct_swigregister(comedi_devconfig_struct)

class comedi_bufconfig_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdevice = property(_comedi.comedi_bufconfig_struct_subdevice_get, _comedi.comedi_bufconfig_struct_subdevice_set)
    flags = property(_comedi.comedi_bufconfig_struct_flags_get, _comedi.comedi_bufconfig_struct_flags_set)
    maximum_size = property(_comedi.comedi_bufconfig_struct_maximum_size_get, _comedi.comedi_bufconfig_struct_maximum_size_set)
    size = property(_comedi.comedi_bufconfig_struct_size_get, _comedi.comedi_bufconfig_struct_size_set)
    unused = property(_comedi.comedi_bufconfig_struct_unused_get, _comedi.comedi_bufconfig_struct_unused_set)

    def __init__(self):
        _comedi.comedi_bufconfig_struct_swiginit(self, _comedi.new_comedi_bufconfig_struct())
    __swig_destroy__ = _comedi.delete_comedi_bufconfig_struct

# Register comedi_bufconfig_struct in _comedi:
_comedi.comedi_bufconfig_struct_swigregister(comedi_bufconfig_struct)

class comedi_bufinfo_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdevice = property(_comedi.comedi_bufinfo_struct_subdevice_get, _comedi.comedi_bufinfo_struct_subdevice_set)
    bytes_read = property(_comedi.comedi_bufinfo_struct_bytes_read_get, _comedi.comedi_bufinfo_struct_bytes_read_set)
    buf_write_ptr = property(_comedi.comedi_bufinfo_struct_buf_write_ptr_get, _comedi.comedi_bufinfo_struct_buf_write_ptr_set)
    buf_read_ptr = property(_comedi.comedi_bufinfo_struct_buf_read_ptr_get, _comedi.comedi_bufinfo_struct_buf_read_ptr_set)
    buf_write_count = property(_comedi.comedi_bufinfo_struct_buf_write_count_get, _comedi.comedi_bufinfo_struct_buf_write_count_set)
    buf_read_count = property(_comedi.comedi_bufinfo_struct_buf_read_count_get, _comedi.comedi_bufinfo_struct_buf_read_count_set)
    bytes_written = property(_comedi.comedi_bufinfo_struct_bytes_written_get, _comedi.comedi_bufinfo_struct_bytes_written_set)
    unused = property(_comedi.comedi_bufinfo_struct_unused_get, _comedi.comedi_bufinfo_struct_unused_set)

    def __init__(self):
        _comedi.comedi_bufinfo_struct_swiginit(self, _comedi.new_comedi_bufinfo_struct())
    __swig_destroy__ = _comedi.delete_comedi_bufinfo_struct

# Register comedi_bufinfo_struct in _comedi:
_comedi.comedi_bufinfo_struct_swigregister(comedi_bufinfo_struct)

RF_EXTERNAL = _comedi.RF_EXTERNAL
UNIT_volt = _comedi.UNIT_volt
UNIT_mA = _comedi.UNIT_mA
UNIT_none = _comedi.UNIT_none
COMEDI_MIN_SPEED = _comedi.COMEDI_MIN_SPEED
I8254_MODE0 = _comedi.I8254_MODE0
I8254_MODE1 = _comedi.I8254_MODE1
I8254_MODE2 = _comedi.I8254_MODE2
I8254_MODE3 = _comedi.I8254_MODE3
I8254_MODE4 = _comedi.I8254_MODE4
I8254_MODE5 = _comedi.I8254_MODE5
I8254_BCD = _comedi.I8254_BCD
I8254_BINARY = _comedi.I8254_BINARY
NI_NAMES_BASE = _comedi.NI_NAMES_BASE
NI_MAX_COUNTERS = _comedi.NI_MAX_COUNTERS
NI_COUNTER_NAMES_BASE = _comedi.NI_COUNTER_NAMES_BASE
NI_GATES_NAMES_BASE = _comedi.NI_GATES_NAMES_BASE
NI_GATES_NAMES_MAX = _comedi.NI_GATES_NAMES_MAX
NI_COUNTER_NAMES_MAX = _comedi.NI_COUNTER_NAMES_MAX
PXI_Star = _comedi.PXI_Star
PXI_Clk10 = _comedi.PXI_Clk10
PXIe_Clk100 = _comedi.PXIe_Clk100
NI_AI_SampleClock = _comedi.NI_AI_SampleClock
NI_AI_SampleClockTimebase = _comedi.NI_AI_SampleClockTimebase
NI_AI_StartTrigger = _comedi.NI_AI_StartTrigger
NI_AI_ReferenceTrigger = _comedi.NI_AI_ReferenceTrigger
NI_AI_ConvertClock = _comedi.NI_AI_ConvertClock
NI_AI_ConvertClockTimebase = _comedi.NI_AI_ConvertClockTimebase
NI_AI_PauseTrigger = _comedi.NI_AI_PauseTrigger
NI_AI_HoldCompleteEvent = _comedi.NI_AI_HoldCompleteEvent
NI_AI_HoldComplete = _comedi.NI_AI_HoldComplete
NI_AI_ExternalMUXClock = _comedi.NI_AI_ExternalMUXClock
NI_AI_STOP = _comedi.NI_AI_STOP
NI_AO_SampleClock = _comedi.NI_AO_SampleClock
NI_AO_SampleClockTimebase = _comedi.NI_AO_SampleClockTimebase
NI_AO_StartTrigger = _comedi.NI_AO_StartTrigger
NI_AO_PauseTrigger = _comedi.NI_AO_PauseTrigger
NI_DI_SampleClock = _comedi.NI_DI_SampleClock
NI_DI_SampleClockTimebase = _comedi.NI_DI_SampleClockTimebase
NI_DI_StartTrigger = _comedi.NI_DI_StartTrigger
NI_DI_ReferenceTrigger = _comedi.NI_DI_ReferenceTrigger
NI_DI_PauseTrigger = _comedi.NI_DI_PauseTrigger
NI_DI_InputBufferFull = _comedi.NI_DI_InputBufferFull
NI_DI_ReadyForStartEvent = _comedi.NI_DI_ReadyForStartEvent
NI_DI_ReadyForTransferEventBurst = _comedi.NI_DI_ReadyForTransferEventBurst
NI_DI_ReadyForTransferEventPipelined = _comedi.NI_DI_ReadyForTransferEventPipelined
NI_DO_SampleClock = _comedi.NI_DO_SampleClock
NI_DO_SampleClockTimebase = _comedi.NI_DO_SampleClockTimebase
NI_DO_StartTrigger = _comedi.NI_DO_StartTrigger
NI_DO_PauseTrigger = _comedi.NI_DO_PauseTrigger
NI_DO_OutputBufferFull = _comedi.NI_DO_OutputBufferFull
NI_DO_DataActiveEvent = _comedi.NI_DO_DataActiveEvent
NI_DO_ReadyForStartEvent = _comedi.NI_DO_ReadyForStartEvent
NI_DO_ReadyForTransferEvent = _comedi.NI_DO_ReadyForTransferEvent
NI_MasterTimebase = _comedi.NI_MasterTimebase
NI_20MHzTimebase = _comedi.NI_20MHzTimebase
NI_80MHzTimebase = _comedi.NI_80MHzTimebase
NI_100MHzTimebase = _comedi.NI_100MHzTimebase
NI_200MHzTimebase = _comedi.NI_200MHzTimebase
NI_100kHzTimebase = _comedi.NI_100kHzTimebase
NI_10MHzRefClock = _comedi.NI_10MHzRefClock
NI_FrequencyOutput = _comedi.NI_FrequencyOutput
NI_ChangeDetectionEvent = _comedi.NI_ChangeDetectionEvent
NI_AnalogComparisonEvent = _comedi.NI_AnalogComparisonEvent
NI_WatchdogExpiredEvent = _comedi.NI_WatchdogExpiredEvent
NI_WatchdogExpirationTrigger = _comedi.NI_WatchdogExpirationTrigger
NI_SCXI_Trig1 = _comedi.NI_SCXI_Trig1
NI_LogicLow = _comedi.NI_LogicLow
NI_LogicHigh = _comedi.NI_LogicHigh
NI_ExternalStrobe = _comedi.NI_ExternalStrobe
NI_PFI_DO = _comedi.NI_PFI_DO
NI_CaseGround = _comedi.NI_CaseGround
NI_RGOUT0 = _comedi.NI_RGOUT0
_NI_NAMES_MAX_PLUS_1 = _comedi._NI_NAMES_MAX_PLUS_1
NI_NUM_NAMES = _comedi.NI_NUM_NAMES
NI_GPCT_COUNTING_MODE_SHIFT = _comedi.NI_GPCT_COUNTING_MODE_SHIFT
NI_GPCT_INDEX_PHASE_BITSHIFT = _comedi.NI_GPCT_INDEX_PHASE_BITSHIFT
NI_GPCT_COUNTING_DIRECTION_SHIFT = _comedi.NI_GPCT_COUNTING_DIRECTION_SHIFT
NI_GPCT_GATE_ON_BOTH_EDGES_BIT = _comedi.NI_GPCT_GATE_ON_BOTH_EDGES_BIT
NI_GPCT_EDGE_GATE_MODE_MASK = _comedi.NI_GPCT_EDGE_GATE_MODE_MASK
NI_GPCT_EDGE_GATE_STARTS_STOPS_BITS = _comedi.NI_GPCT_EDGE_GATE_STARTS_STOPS_BITS
NI_GPCT_EDGE_GATE_STOPS_STARTS_BITS = _comedi.NI_GPCT_EDGE_GATE_STOPS_STARTS_BITS
NI_GPCT_EDGE_GATE_STARTS_BITS = _comedi.NI_GPCT_EDGE_GATE_STARTS_BITS
NI_GPCT_EDGE_GATE_NO_STARTS_NO_STOPS_BITS = _comedi.NI_GPCT_EDGE_GATE_NO_STARTS_NO_STOPS_BITS
NI_GPCT_STOP_MODE_MASK = _comedi.NI_GPCT_STOP_MODE_MASK
NI_GPCT_STOP_ON_GATE_BITS = _comedi.NI_GPCT_STOP_ON_GATE_BITS
NI_GPCT_STOP_ON_GATE_OR_TC_BITS = _comedi.NI_GPCT_STOP_ON_GATE_OR_TC_BITS
NI_GPCT_STOP_ON_GATE_OR_SECOND_TC_BITS = _comedi.NI_GPCT_STOP_ON_GATE_OR_SECOND_TC_BITS
NI_GPCT_LOAD_B_SELECT_BIT = _comedi.NI_GPCT_LOAD_B_SELECT_BIT
NI_GPCT_OUTPUT_MODE_MASK = _comedi.NI_GPCT_OUTPUT_MODE_MASK
NI_GPCT_OUTPUT_TC_PULSE_BITS = _comedi.NI_GPCT_OUTPUT_TC_PULSE_BITS
NI_GPCT_OUTPUT_TC_TOGGLE_BITS = _comedi.NI_GPCT_OUTPUT_TC_TOGGLE_BITS
NI_GPCT_OUTPUT_TC_OR_GATE_TOGGLE_BITS = _comedi.NI_GPCT_OUTPUT_TC_OR_GATE_TOGGLE_BITS
NI_GPCT_HARDWARE_DISARM_MASK = _comedi.NI_GPCT_HARDWARE_DISARM_MASK
NI_GPCT_NO_HARDWARE_DISARM_BITS = _comedi.NI_GPCT_NO_HARDWARE_DISARM_BITS
NI_GPCT_DISARM_AT_TC_BITS = _comedi.NI_GPCT_DISARM_AT_TC_BITS
NI_GPCT_DISARM_AT_GATE_BITS = _comedi.NI_GPCT_DISARM_AT_GATE_BITS
NI_GPCT_DISARM_AT_TC_OR_GATE_BITS = _comedi.NI_GPCT_DISARM_AT_TC_OR_GATE_BITS
NI_GPCT_LOADING_ON_TC_BIT = _comedi.NI_GPCT_LOADING_ON_TC_BIT
NI_GPCT_LOADING_ON_GATE_BIT = _comedi.NI_GPCT_LOADING_ON_GATE_BIT
NI_GPCT_COUNTING_MODE_MASK = _comedi.NI_GPCT_COUNTING_MODE_MASK
NI_GPCT_COUNTING_MODE_NORMAL_BITS = _comedi.NI_GPCT_COUNTING_MODE_NORMAL_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X1_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X1_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X2_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X2_BITS
NI_GPCT_COUNTING_MODE_QUADRATURE_X4_BITS = _comedi.NI_GPCT_COUNTING_MODE_QUADRATURE_X4_BITS
NI_GPCT_COUNTING_MODE_TWO_PULSE_BITS = _comedi.NI_GPCT_COUNTING_MODE_TWO_PULSE_BITS
NI_GPCT_COUNTING_MODE_SYNC_SOURCE_BITS = _comedi.NI_GPCT_COUNTING_MODE_SYNC_SOURCE_BITS
NI_GPCT_INDEX_PHASE_MASK = _comedi.NI_GPCT_INDEX_PHASE_MASK
NI_GPCT_INDEX_PHASE_LOW_A_LOW_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_LOW_A_LOW_B_BITS
NI_GPCT_INDEX_PHASE_LOW_A_HIGH_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_LOW_A_HIGH_B_BITS
NI_GPCT_INDEX_PHASE_HIGH_A_LOW_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_HIGH_A_LOW_B_BITS
NI_GPCT_INDEX_PHASE_HIGH_A_HIGH_B_BITS = _comedi.NI_GPCT_INDEX_PHASE_HIGH_A_HIGH_B_BITS
NI_GPCT_INDEX_ENABLE_BIT = _comedi.NI_GPCT_INDEX_ENABLE_BIT
NI_GPCT_COUNTING_DIRECTION_MASK = _comedi.NI_GPCT_COUNTING_DIRECTION_MASK
NI_GPCT_COUNTING_DIRECTION_DOWN_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_DOWN_BITS
NI_GPCT_COUNTING_DIRECTION_UP_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_UP_BITS
NI_GPCT_COUNTING_DIRECTION_HW_UP_DOWN_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_HW_UP_DOWN_BITS
NI_GPCT_COUNTING_DIRECTION_HW_GATE_BITS = _comedi.NI_GPCT_COUNTING_DIRECTION_HW_GATE_BITS
NI_GPCT_RELOAD_SOURCE_MASK = _comedi.NI_GPCT_RELOAD_SOURCE_MASK
NI_GPCT_RELOAD_SOURCE_FIXED_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_FIXED_BITS
NI_GPCT_RELOAD_SOURCE_SWITCHING_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_SWITCHING_BITS
NI_GPCT_RELOAD_SOURCE_GATE_SELECT_BITS = _comedi.NI_GPCT_RELOAD_SOURCE_GATE_SELECT_BITS
NI_GPCT_OR_GATE_BIT = _comedi.NI_GPCT_OR_GATE_BIT
NI_GPCT_INVERT_OUTPUT_BIT = _comedi.NI_GPCT_INVERT_OUTPUT_BIT
NI_GPCT_CLOCK_SRC_SELECT_MASK = _comedi.NI_GPCT_CLOCK_SRC_SELECT_MASK
NI_GPCT_TIMEBASE_1_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_1_CLOCK_SRC_BITS
NI_GPCT_TIMEBASE_2_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_2_CLOCK_SRC_BITS
NI_GPCT_TIMEBASE_3_CLOCK_SRC_BITS = _comedi.NI_GPCT_TIMEBASE_3_CLOCK_SRC_BITS
NI_GPCT_LOGIC_LOW_CLOCK_SRC_BITS = _comedi.NI_GPCT_LOGIC_LOW_CLOCK_SRC_BITS
NI_GPCT_NEXT_GATE_CLOCK_SRC_BITS = _comedi.NI_GPCT_NEXT_GATE_CLOCK_SRC_BITS
NI_GPCT_NEXT_TC_CLOCK_SRC_BITS = _comedi.NI_GPCT_NEXT_TC_CLOCK_SRC_BITS
NI_GPCT_SOURCE_PIN_i_CLOCK_SRC_BITS = _comedi.NI_GPCT_SOURCE_PIN_i_CLOCK_SRC_BITS
NI_GPCT_PXI10_CLOCK_SRC_BITS = _comedi.NI_GPCT_PXI10_CLOCK_SRC_BITS
NI_GPCT_PXI_STAR_TRIGGER_CLOCK_SRC_BITS = _comedi.NI_GPCT_PXI_STAR_TRIGGER_CLOCK_SRC_BITS
NI_GPCT_ANALOG_TRIGGER_OUT_CLOCK_SRC_BITS = _comedi.NI_GPCT_ANALOG_TRIGGER_OUT_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_MODE_CLOCK_SRC_MASK = _comedi.NI_GPCT_PRESCALE_MODE_CLOCK_SRC_MASK
NI_GPCT_NO_PRESCALE_CLOCK_SRC_BITS = _comedi.NI_GPCT_NO_PRESCALE_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_X2_CLOCK_SRC_BITS = _comedi.NI_GPCT_PRESCALE_X2_CLOCK_SRC_BITS
NI_GPCT_PRESCALE_X8_CLOCK_SRC_BITS = _comedi.NI_GPCT_PRESCALE_X8_CLOCK_SRC_BITS
NI_GPCT_TIMESTAMP_MUX_GATE_SELECT = _comedi.NI_GPCT_TIMESTAMP_MUX_GATE_SELECT
NI_GPCT_AI_START2_GATE_SELECT = _comedi.NI_GPCT_AI_START2_GATE_SELECT
NI_GPCT_PXI_STAR_TRIGGER_GATE_SELECT = _comedi.NI_GPCT_PXI_STAR_TRIGGER_GATE_SELECT
NI_GPCT_NEXT_OUT_GATE_SELECT = _comedi.NI_GPCT_NEXT_OUT_GATE_SELECT
NI_GPCT_AI_START1_GATE_SELECT = _comedi.NI_GPCT_AI_START1_GATE_SELECT
NI_GPCT_NEXT_SOURCE_GATE_SELECT = _comedi.NI_GPCT_NEXT_SOURCE_GATE_SELECT
NI_GPCT_ANALOG_TRIGGER_OUT_GATE_SELECT = _comedi.NI_GPCT_ANALOG_TRIGGER_OUT_GATE_SELECT
NI_GPCT_LOGIC_LOW_GATE_SELECT = _comedi.NI_GPCT_LOGIC_LOW_GATE_SELECT
NI_GPCT_SOURCE_PIN_i_GATE_SELECT = _comedi.NI_GPCT_SOURCE_PIN_i_GATE_SELECT
NI_GPCT_GATE_PIN_i_GATE_SELECT = _comedi.NI_GPCT_GATE_PIN_i_GATE_SELECT
NI_GPCT_UP_DOWN_PIN_i_GATE_SELECT = _comedi.NI_GPCT_UP_DOWN_PIN_i_GATE_SELECT
NI_GPCT_SELECTED_GATE_GATE_SELECT = _comedi.NI_GPCT_SELECTED_GATE_GATE_SELECT
NI_GPCT_DISABLED_GATE_SELECT = _comedi.NI_GPCT_DISABLED_GATE_SELECT
NI_GPCT_SOURCE_ENCODER_A = _comedi.NI_GPCT_SOURCE_ENCODER_A
NI_GPCT_SOURCE_ENCODER_B = _comedi.NI_GPCT_SOURCE_ENCODER_B
NI_GPCT_SOURCE_ENCODER_Z = _comedi.NI_GPCT_SOURCE_ENCODER_Z
NI_GPCT_DISABLED_OTHER_SELECT = _comedi.NI_GPCT_DISABLED_OTHER_SELECT
NI_GPCT_ARM_IMMEDIATE = _comedi.NI_GPCT_ARM_IMMEDIATE
NI_GPCT_ARM_PAIRED_IMMEDIATE = _comedi.NI_GPCT_ARM_PAIRED_IMMEDIATE
NI_GPCT_HW_ARM = _comedi.NI_GPCT_HW_ARM
NI_GPCT_ARM_UNKNOWN = _comedi.NI_GPCT_ARM_UNKNOWN
NI_GPCT_FILTER_OFF = _comedi.NI_GPCT_FILTER_OFF
NI_GPCT_FILTER_TIMEBASE_3_SYNC = _comedi.NI_GPCT_FILTER_TIMEBASE_3_SYNC
NI_GPCT_FILTER_100x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_100x_TIMEBASE_1
NI_GPCT_FILTER_20x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_20x_TIMEBASE_1
NI_GPCT_FILTER_10x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_10x_TIMEBASE_1
NI_GPCT_FILTER_2x_TIMEBASE_1 = _comedi.NI_GPCT_FILTER_2x_TIMEBASE_1
NI_GPCT_FILTER_2x_TIMEBASE_3 = _comedi.NI_GPCT_FILTER_2x_TIMEBASE_3
NI_PFI_FILTER_OFF = _comedi.NI_PFI_FILTER_OFF
NI_PFI_FILTER_125ns = _comedi.NI_PFI_FILTER_125ns
NI_PFI_FILTER_6425ns = _comedi.NI_PFI_FILTER_6425ns
NI_PFI_FILTER_2550us = _comedi.NI_PFI_FILTER_2550us
NI_MIO_INTERNAL_CLOCK = _comedi.NI_MIO_INTERNAL_CLOCK
NI_MIO_RTSI_CLOCK = _comedi.NI_MIO_RTSI_CLOCK
NI_MIO_PLL_PXI_STAR_TRIGGER_CLOCK = _comedi.NI_MIO_PLL_PXI_STAR_TRIGGER_CLOCK
NI_MIO_PLL_PXI10_CLOCK = _comedi.NI_MIO_PLL_PXI10_CLOCK
NI_MIO_PLL_RTSI0_CLOCK = _comedi.NI_MIO_PLL_RTSI0_CLOCK
NI_RTSI_OUTPUT_ADR_START1 = _comedi.NI_RTSI_OUTPUT_ADR_START1
NI_RTSI_OUTPUT_ADR_START2 = _comedi.NI_RTSI_OUTPUT_ADR_START2
NI_RTSI_OUTPUT_SCLKG = _comedi.NI_RTSI_OUTPUT_SCLKG
NI_RTSI_OUTPUT_DACUPDN = _comedi.NI_RTSI_OUTPUT_DACUPDN
NI_RTSI_OUTPUT_DA_START1 = _comedi.NI_RTSI_OUTPUT_DA_START1
NI_RTSI_OUTPUT_G_SRC0 = _comedi.NI_RTSI_OUTPUT_G_SRC0
NI_RTSI_OUTPUT_G_GATE0 = _comedi.NI_RTSI_OUTPUT_G_GATE0
NI_RTSI_OUTPUT_RGOUT0 = _comedi.NI_RTSI_OUTPUT_RGOUT0
NI_RTSI_OUTPUT_RTSI_BRD_0 = _comedi.NI_RTSI_OUTPUT_RTSI_BRD_0
NI_RTSI_OUTPUT_RTSI_OSC = _comedi.NI_RTSI_OUTPUT_RTSI_OSC
NI_PFI_OUTPUT_PFI_DEFAULT = _comedi.NI_PFI_OUTPUT_PFI_DEFAULT
NI_PFI_OUTPUT_AI_START1 = _comedi.NI_PFI_OUTPUT_AI_START1
NI_PFI_OUTPUT_AI_START2 = _comedi.NI_PFI_OUTPUT_AI_START2
NI_PFI_OUTPUT_AI_CONVERT = _comedi.NI_PFI_OUTPUT_AI_CONVERT
NI_PFI_OUTPUT_G_SRC1 = _comedi.NI_PFI_OUTPUT_G_SRC1
NI_PFI_OUTPUT_G_GATE1 = _comedi.NI_PFI_OUTPUT_G_GATE1
NI_PFI_OUTPUT_AO_UPDATE_N = _comedi.NI_PFI_OUTPUT_AO_UPDATE_N
NI_PFI_OUTPUT_AO_START1 = _comedi.NI_PFI_OUTPUT_AO_START1
NI_PFI_OUTPUT_AI_START_PULSE = _comedi.NI_PFI_OUTPUT_AI_START_PULSE
NI_PFI_OUTPUT_G_SRC0 = _comedi.NI_PFI_OUTPUT_G_SRC0
NI_PFI_OUTPUT_G_GATE0 = _comedi.NI_PFI_OUTPUT_G_GATE0
NI_PFI_OUTPUT_EXT_STROBE = _comedi.NI_PFI_OUTPUT_EXT_STROBE
NI_PFI_OUTPUT_AI_EXT_MUX_CLK = _comedi.NI_PFI_OUTPUT_AI_EXT_MUX_CLK
NI_PFI_OUTPUT_GOUT0 = _comedi.NI_PFI_OUTPUT_GOUT0
NI_PFI_OUTPUT_GOUT1 = _comedi.NI_PFI_OUTPUT_GOUT1
NI_PFI_OUTPUT_FREQ_OUT = _comedi.NI_PFI_OUTPUT_FREQ_OUT
NI_PFI_OUTPUT_PFI_DO = _comedi.NI_PFI_OUTPUT_PFI_DO
NI_PFI_OUTPUT_I_ATRIG = _comedi.NI_PFI_OUTPUT_I_ATRIG
NI_PFI_OUTPUT_RTSI0 = _comedi.NI_PFI_OUTPUT_RTSI0
NI_PFI_OUTPUT_PXI_STAR_TRIGGER_IN = _comedi.NI_PFI_OUTPUT_PXI_STAR_TRIGGER_IN
NI_PFI_OUTPUT_SCXI_TRIG1 = _comedi.NI_PFI_OUTPUT_SCXI_TRIG1
NI_PFI_OUTPUT_DIO_CHANGE_DETECT_RTSI = _comedi.NI_PFI_OUTPUT_DIO_CHANGE_DETECT_RTSI
NI_PFI_OUTPUT_CDI_SAMPLE = _comedi.NI_PFI_OUTPUT_CDI_SAMPLE
NI_PFI_OUTPUT_CDO_UPDATE = _comedi.NI_PFI_OUTPUT_CDO_UPDATE
NI_660X_PFI_OUTPUT_COUNTER = _comedi.NI_660X_PFI_OUTPUT_COUNTER
NI_660X_PFI_OUTPUT_DIO = _comedi.NI_660X_PFI_OUTPUT_DIO
NI_CDIO_SCAN_BEGIN_SRC_GROUND = _comedi.NI_CDIO_SCAN_BEGIN_SRC_GROUND
NI_CDIO_SCAN_BEGIN_SRC_AI_START = _comedi.NI_CDIO_SCAN_BEGIN_SRC_AI_START
NI_CDIO_SCAN_BEGIN_SRC_AI_CONVERT = _comedi.NI_CDIO_SCAN_BEGIN_SRC_AI_CONVERT
NI_CDIO_SCAN_BEGIN_SRC_PXI_STAR_TRIGGER = _comedi.NI_CDIO_SCAN_BEGIN_SRC_PXI_STAR_TRIGGER
NI_CDIO_SCAN_BEGIN_SRC_G0_OUT = _comedi.NI_CDIO_SCAN_BEGIN_SRC_G0_OUT
NI_CDIO_SCAN_BEGIN_SRC_G1_OUT = _comedi.NI_CDIO_SCAN_BEGIN_SRC_G1_OUT
NI_CDIO_SCAN_BEGIN_SRC_ANALOG_TRIGGER = _comedi.NI_CDIO_SCAN_BEGIN_SRC_ANALOG_TRIGGER
NI_CDIO_SCAN_BEGIN_SRC_AO_UPDATE = _comedi.NI_CDIO_SCAN_BEGIN_SRC_AO_UPDATE
NI_CDIO_SCAN_BEGIN_SRC_FREQ_OUT = _comedi.NI_CDIO_SCAN_BEGIN_SRC_FREQ_OUT
NI_CDIO_SCAN_BEGIN_SRC_DIO_CHANGE_DETECT_IRQ = _comedi.NI_CDIO_SCAN_BEGIN_SRC_DIO_CHANGE_DETECT_IRQ
NI_FREQ_OUT_TIMEBASE_1_DIV_2_CLOCK_SRC = _comedi.NI_FREQ_OUT_TIMEBASE_1_DIV_2_CLOCK_SRC
NI_FREQ_OUT_TIMEBASE_2_CLOCK_SRC = _comedi.NI_FREQ_OUT_TIMEBASE_2_CLOCK_SRC
AMPLC_DIO_CLK_CLKN = _comedi.AMPLC_DIO_CLK_CLKN
AMPLC_DIO_CLK_10MHZ = _comedi.AMPLC_DIO_CLK_10MHZ
AMPLC_DIO_CLK_1MHZ = _comedi.AMPLC_DIO_CLK_1MHZ
AMPLC_DIO_CLK_100KHZ = _comedi.AMPLC_DIO_CLK_100KHZ
AMPLC_DIO_CLK_10KHZ = _comedi.AMPLC_DIO_CLK_10KHZ
AMPLC_DIO_CLK_1KHZ = _comedi.AMPLC_DIO_CLK_1KHZ
AMPLC_DIO_CLK_OUTNM1 = _comedi.AMPLC_DIO_CLK_OUTNM1
AMPLC_DIO_CLK_EXT = _comedi.AMPLC_DIO_CLK_EXT
AMPLC_DIO_CLK_VCC = _comedi.AMPLC_DIO_CLK_VCC
AMPLC_DIO_CLK_GND = _comedi.AMPLC_DIO_CLK_GND
AMPLC_DIO_CLK_PAT_PRESENT = _comedi.AMPLC_DIO_CLK_PAT_PRESENT
AMPLC_DIO_CLK_20MHZ = _comedi.AMPLC_DIO_CLK_20MHZ
AMPLC_DIO_TS_CLK_1GHZ = _comedi.AMPLC_DIO_TS_CLK_1GHZ
AMPLC_DIO_TS_CLK_1MHZ = _comedi.AMPLC_DIO_TS_CLK_1MHZ
AMPLC_DIO_TS_CLK_1KHZ = _comedi.AMPLC_DIO_TS_CLK_1KHZ
AMPLC_DIO_GAT_VCC = _comedi.AMPLC_DIO_GAT_VCC
AMPLC_DIO_GAT_GND = _comedi.AMPLC_DIO_GAT_GND
AMPLC_DIO_GAT_GATN = _comedi.AMPLC_DIO_GAT_GATN
AMPLC_DIO_GAT_NOUTNM2 = _comedi.AMPLC_DIO_GAT_NOUTNM2
AMPLC_DIO_GAT_RESERVED4 = _comedi.AMPLC_DIO_GAT_RESERVED4
AMPLC_DIO_GAT_RESERVED5 = _comedi.AMPLC_DIO_GAT_RESERVED5
AMPLC_DIO_GAT_RESERVED6 = _comedi.AMPLC_DIO_GAT_RESERVED6
AMPLC_DIO_GAT_RESERVED7 = _comedi.AMPLC_DIO_GAT_RESERVED7
AMPLC_DIO_GAT_NGATN = _comedi.AMPLC_DIO_GAT_NGATN
AMPLC_DIO_GAT_OUTNM2 = _comedi.AMPLC_DIO_GAT_OUTNM2
AMPLC_DIO_GAT_PAT_PRESENT = _comedi.AMPLC_DIO_GAT_PAT_PRESENT
AMPLC_DIO_GAT_PAT_OCCURRED = _comedi.AMPLC_DIO_GAT_PAT_OCCURRED
AMPLC_DIO_GAT_PAT_GONE = _comedi.AMPLC_DIO_GAT_PAT_GONE
AMPLC_DIO_GAT_NPAT_PRESENT = _comedi.AMPLC_DIO_GAT_NPAT_PRESENT
AMPLC_DIO_GAT_NPAT_OCCURRED = _comedi.AMPLC_DIO_GAT_NPAT_OCCURRED
AMPLC_DIO_GAT_NPAT_GONE = _comedi.AMPLC_DIO_GAT_NPAT_GONE
KE_CLK_20MHZ = _comedi.KE_CLK_20MHZ
KE_CLK_4MHZ = _comedi.KE_CLK_4MHZ
KE_CLK_EXT = _comedi.KE_CLK_EXT
SDF_MODE0 = _comedi.SDF_MODE0
SDF_MODE1 = _comedi.SDF_MODE1
SDF_MODE2 = _comedi.SDF_MODE2
SDF_MODE3 = _comedi.SDF_MODE3
SDF_MODE4 = _comedi.SDF_MODE4
SDF_RT = _comedi.SDF_RT
TRIG_DITHER = _comedi.TRIG_DITHER
TRIG_DEGLITCH = _comedi.TRIG_DEGLITCH
TRIG_CONFIG = _comedi.TRIG_CONFIG
class comedi_trig_struct(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdev = property(_comedi.comedi_trig_struct_subdev_get, _comedi.comedi_trig_struct_subdev_set)
    mode = property(_comedi.comedi_trig_struct_mode_get, _comedi.comedi_trig_struct_mode_set)
    flags = property(_comedi.comedi_trig_struct_flags_get, _comedi.comedi_trig_struct_flags_set)
    n_chan = property(_comedi.comedi_trig_struct_n_chan_get, _comedi.comedi_trig_struct_n_chan_set)
    chanlist = property(_comedi.comedi_trig_struct_chanlist_get, _comedi.comedi_trig_struct_chanlist_set)
    data = property(_comedi.comedi_trig_struct_data_get, _comedi.comedi_trig_struct_data_set)
    n = property(_comedi.comedi_trig_struct_n_get, _comedi.comedi_trig_struct_n_set)
    trigsrc = property(_comedi.comedi_trig_struct_trigsrc_get, _comedi.comedi_trig_struct_trigsrc_set)
    trigvar = property(_comedi.comedi_trig_struct_trigvar_get, _comedi.comedi_trig_struct_trigvar_set)
    trigvar1 = property(_comedi.comedi_trig_struct_trigvar1_get, _comedi.comedi_trig_struct_trigvar1_set)
    data_len = property(_comedi.comedi_trig_struct_data_len_get, _comedi.comedi_trig_struct_data_len_set)
    unused = property(_comedi.comedi_trig_struct_unused_get, _comedi.comedi_trig_struct_unused_set)

    def __init__(self):
        _comedi.comedi_trig_struct_swiginit(self, _comedi.new_comedi_trig_struct())
    __swig_destroy__ = _comedi.delete_comedi_trig_struct

# Register comedi_trig_struct in _comedi:
_comedi.comedi_trig_struct_swigregister(comedi_trig_struct)

class comedi_range(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    min = property(_comedi.comedi_range_min_get, _comedi.comedi_range_min_set)
    max = property(_comedi.comedi_range_max_get, _comedi.comedi_range_max_set)
    unit = property(_comedi.comedi_range_unit_get, _comedi.comedi_range_unit_set)

    def __init__(self):
        _comedi.comedi_range_swiginit(self, _comedi.new_comedi_range())
    __swig_destroy__ = _comedi.delete_comedi_range

# Register comedi_range in _comedi:
_comedi.comedi_range_swigregister(comedi_range)

class comedi_sv_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dev = property(_comedi.comedi_sv_t_dev_get, _comedi.comedi_sv_t_dev_set)
    subdevice = property(_comedi.comedi_sv_t_subdevice_get, _comedi.comedi_sv_t_subdevice_set)
    chan = property(_comedi.comedi_sv_t_chan_get, _comedi.comedi_sv_t_chan_set)
    range = property(_comedi.comedi_sv_t_range_get, _comedi.comedi_sv_t_range_set)
    aref = property(_comedi.comedi_sv_t_aref_get, _comedi.comedi_sv_t_aref_set)
    n = property(_comedi.comedi_sv_t_n_get, _comedi.comedi_sv_t_n_set)
    maxdata = property(_comedi.comedi_sv_t_maxdata_get, _comedi.comedi_sv_t_maxdata_set)

    def __init__(self):
        _comedi.comedi_sv_t_swiginit(self, _comedi.new_comedi_sv_t())
    __swig_destroy__ = _comedi.delete_comedi_sv_t

# Register comedi_sv_t in _comedi:
_comedi.comedi_sv_t_swigregister(comedi_sv_t)

COMEDI_OOR_NUMBER = _comedi.COMEDI_OOR_NUMBER
COMEDI_OOR_NAN = _comedi.COMEDI_OOR_NAN

def comedi_open(fn):
    return _comedi.comedi_open(fn)

def comedi_close(it):
    return _comedi.comedi_close(it)

def comedi_loglevel(loglevel):
    return _comedi.comedi_loglevel(loglevel)

def comedi_perror(s):
    return _comedi.comedi_perror(s)

def comedi_strerror(errnum):
    return _comedi.comedi_strerror(errnum)

def comedi_errno():
    return _comedi.comedi_errno()

def comedi_fileno(it):
    return _comedi.comedi_fileno(it)

def comedi_set_global_oor_behavior(behavior):
    return _comedi.comedi_set_global_oor_behavior(behavior)

def comedi_get_n_subdevices(it):
    return _comedi.comedi_get_n_subdevices(it)

def comedi_get_version_code(it):
    return _comedi.comedi_get_version_code(it)

def comedi_get_driver_name(it):
    return _comedi.comedi_get_driver_name(it)

def comedi_get_board_name(it):
    return _comedi.comedi_get_board_name(it)

def comedi_get_read_subdevice(dev):
    return _comedi.comedi_get_read_subdevice(dev)

def comedi_get_write_subdevice(dev):
    return _comedi.comedi_get_write_subdevice(dev)

def comedi_get_subdevice_type(it, subdevice):
    return _comedi.comedi_get_subdevice_type(it, subdevice)

def comedi_find_subdevice_by_type(it, type, subd):
    return _comedi.comedi_find_subdevice_by_type(it, type, subd)

def comedi_get_subdevice_flags(it, subdevice):
    return _comedi.comedi_get_subdevice_flags(it, subdevice)

def comedi_get_n_channels(it, subdevice):
    return _comedi.comedi_get_n_channels(it, subdevice)

def comedi_range_is_chan_specific(it, subdevice):
    return _comedi.comedi_range_is_chan_specific(it, subdevice)

def comedi_maxdata_is_chan_specific(it, subdevice):
    return _comedi.comedi_maxdata_is_chan_specific(it, subdevice)

def comedi_get_maxdata(it, subdevice, chan):
    return _comedi.comedi_get_maxdata(it, subdevice, chan)

def comedi_get_n_ranges(it, subdevice, chan):
    return _comedi.comedi_get_n_ranges(it, subdevice, chan)

def comedi_get_range(it, subdevice, chan, range):
    return _comedi.comedi_get_range(it, subdevice, chan, range)

def comedi_find_range(it, subd, chan, unit, min, max):
    return _comedi.comedi_find_range(it, subd, chan, unit, min, max)

def comedi_get_buffer_size(it, subdevice):
    return _comedi.comedi_get_buffer_size(it, subdevice)

def comedi_get_max_buffer_size(it, subdevice):
    return _comedi.comedi_get_max_buffer_size(it, subdevice)

def comedi_set_buffer_size(it, subdevice, len):
    return _comedi.comedi_set_buffer_size(it, subdevice, len)

def comedi_do_insnlist(it, il):
    return _comedi.comedi_do_insnlist(it, il)

def comedi_do_insn(it, insn):
    return _comedi.comedi_do_insn(it, insn)

def comedi_lock(it, subdevice):
    return _comedi.comedi_lock(it, subdevice)

def comedi_unlock(it, subdevice):
    return _comedi.comedi_unlock(it, subdevice)

def comedi_set_read_subdevice(it, subdevice):
    return _comedi.comedi_set_read_subdevice(it, subdevice)

def comedi_set_write_subdevice(it, subdevice):
    return _comedi.comedi_set_write_subdevice(it, subdevice)

def comedi_to_phys(data, rng, maxdata):
    return _comedi.comedi_to_phys(data, rng, maxdata)

def comedi_from_phys(data, rng, maxdata):
    return _comedi.comedi_from_phys(data, rng, maxdata)

def comedi_sampl_to_phys(dest, dst_stride, src, src_stride, rng, maxdata, n):
    return _comedi.comedi_sampl_to_phys(dest, dst_stride, src, src_stride, rng, maxdata, n)

def comedi_sampl_from_phys(dest, dst_stride, src, src_stride, rng, maxdata, n):
    return _comedi.comedi_sampl_from_phys(dest, dst_stride, src, src_stride, rng, maxdata, n)

def comedi_data_read(it, subd, chan, range, aref):
    return _comedi.comedi_data_read(it, subd, chan, range, aref)

def comedi_data_read_n(it, subd, chan, range, aref, data, n):
    return _comedi.comedi_data_read_n(it, subd, chan, range, aref, data, n)

def comedi_data_read_hint(it, subd, chan, range, aref):
    return _comedi.comedi_data_read_hint(it, subd, chan, range, aref)

def comedi_data_read_delayed(it, subd, chan, range, aref, nano_sec):
    return _comedi.comedi_data_read_delayed(it, subd, chan, range, aref, nano_sec)

def comedi_data_write(it, subd, chan, range, aref, data):
    return _comedi.comedi_data_write(it, subd, chan, range, aref, data)

def comedi_dio_config(it, subd, chan, dir):
    return _comedi.comedi_dio_config(it, subd, chan, dir)

def comedi_dio_get_config(it, subd, chan):
    return _comedi.comedi_dio_get_config(it, subd, chan)

def comedi_dio_read(it, subd, chan):
    return _comedi.comedi_dio_read(it, subd, chan)

def comedi_dio_write(it, subd, chan, bit):
    return _comedi.comedi_dio_write(it, subd, chan, bit)

def comedi_dio_bitfield2(it, subd, write_mask, INOUT, base_channel):
    return _comedi.comedi_dio_bitfield2(it, subd, write_mask, INOUT, base_channel)

def comedi_dio_bitfield(it, subd, write_mask, INOUT):
    return _comedi.comedi_dio_bitfield(it, subd, write_mask, INOUT)

def comedi_sv_init(it, dev, subd, chan):
    return _comedi.comedi_sv_init(it, dev, subd, chan)

def comedi_sv_update(it):
    return _comedi.comedi_sv_update(it)

def comedi_sv_measure(it):
    return _comedi.comedi_sv_measure(it)

def comedi_get_cmd_src_mask(dev, subdevice, INOUT):
    return _comedi.comedi_get_cmd_src_mask(dev, subdevice, INOUT)

def comedi_get_cmd_generic_timed(dev, subdevice, INOUT, chanlist_len, scan_period_ns):
    return _comedi.comedi_get_cmd_generic_timed(dev, subdevice, INOUT, chanlist_len, scan_period_ns)

def comedi_cancel(it, subdevice):
    return _comedi.comedi_cancel(it, subdevice)

def comedi_command(it, cmd):
    return _comedi.comedi_command(it, cmd)

def comedi_command_test(it, INOUT):
    return _comedi.comedi_command_test(it, INOUT)

def comedi_poll(dev, subdevice):
    return _comedi.comedi_poll(dev, subdevice)

def comedi_set_max_buffer_size(it, subdev, max_size):
    return _comedi.comedi_set_max_buffer_size(it, subdev, max_size)

def comedi_get_buffer_contents(it, subdev):
    return _comedi.comedi_get_buffer_contents(it, subdev)

def comedi_mark_buffer_read(it, subdev, bytes):
    return _comedi.comedi_mark_buffer_read(it, subdev, bytes)

def comedi_mark_buffer_written(it, subdev, bytes):
    return _comedi.comedi_mark_buffer_written(it, subdev, bytes)

def comedi_get_buffer_read_offset(it, subdev):
    return _comedi.comedi_get_buffer_read_offset(it, subdev)

def comedi_get_buffer_write_offset(it, subdev):
    return _comedi.comedi_get_buffer_write_offset(it, subdev)

def comedi_get_buffer_read_count(it, subdev):
    return _comedi.comedi_get_buffer_read_count(it, subdev)

def comedi_get_buffer_write_count(it, subdev):
    return _comedi.comedi_get_buffer_write_count(it, subdev)

def comedi_get_buffer_offset(it, subdev):
    return _comedi.comedi_get_buffer_offset(it, subdev)
class comedi_caldac_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdevice = property(_comedi.comedi_caldac_t_subdevice_get, _comedi.comedi_caldac_t_subdevice_set)
    channel = property(_comedi.comedi_caldac_t_channel_get, _comedi.comedi_caldac_t_channel_set)
    value = property(_comedi.comedi_caldac_t_value_get, _comedi.comedi_caldac_t_value_set)

    def __init__(self):
        _comedi.comedi_caldac_t_swiginit(self, _comedi.new_comedi_caldac_t())
    __swig_destroy__ = _comedi.delete_comedi_caldac_t

# Register comedi_caldac_t in _comedi:
_comedi.comedi_caldac_t_swigregister(comedi_caldac_t)

COMEDI_MAX_NUM_POLYNOMIAL_COEFFICIENTS = _comedi.COMEDI_MAX_NUM_POLYNOMIAL_COEFFICIENTS
class comedi_polynomial_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    coefficients = property(_comedi.comedi_polynomial_t_coefficients_get, _comedi.comedi_polynomial_t_coefficients_set)
    expansion_origin = property(_comedi.comedi_polynomial_t_expansion_origin_get, _comedi.comedi_polynomial_t_expansion_origin_set)
    order = property(_comedi.comedi_polynomial_t_order_get, _comedi.comedi_polynomial_t_order_set)

    def __init__(self):
        _comedi.comedi_polynomial_t_swiginit(self, _comedi.new_comedi_polynomial_t())
    __swig_destroy__ = _comedi.delete_comedi_polynomial_t

# Register comedi_polynomial_t in _comedi:
_comedi.comedi_polynomial_t_swigregister(comedi_polynomial_t)

class comedi_softcal_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    to_phys = property(_comedi.comedi_softcal_t_to_phys_get, _comedi.comedi_softcal_t_to_phys_set)
    from_phys = property(_comedi.comedi_softcal_t_from_phys_get, _comedi.comedi_softcal_t_from_phys_set)

    def __init__(self):
        _comedi.comedi_softcal_t_swiginit(self, _comedi.new_comedi_softcal_t())
    __swig_destroy__ = _comedi.delete_comedi_softcal_t

# Register comedi_softcal_t in _comedi:
_comedi.comedi_softcal_t_swigregister(comedi_softcal_t)

CS_MAX_AREFS_LENGTH = _comedi.CS_MAX_AREFS_LENGTH
class comedi_calibration_setting_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    subdevice = property(_comedi.comedi_calibration_setting_t_subdevice_get, _comedi.comedi_calibration_setting_t_subdevice_set)
    channels = property(_comedi.comedi_calibration_setting_t_channels_get, _comedi.comedi_calibration_setting_t_channels_set)
    num_channels = property(_comedi.comedi_calibration_setting_t_num_channels_get, _comedi.comedi_calibration_setting_t_num_channels_set)
    ranges = property(_comedi.comedi_calibration_setting_t_ranges_get, _comedi.comedi_calibration_setting_t_ranges_set)
    num_ranges = property(_comedi.comedi_calibration_setting_t_num_ranges_get, _comedi.comedi_calibration_setting_t_num_ranges_set)
    arefs = property(_comedi.comedi_calibration_setting_t_arefs_get, _comedi.comedi_calibration_setting_t_arefs_set)
    num_arefs = property(_comedi.comedi_calibration_setting_t_num_arefs_get, _comedi.comedi_calibration_setting_t_num_arefs_set)
    caldacs = property(_comedi.comedi_calibration_setting_t_caldacs_get, _comedi.comedi_calibration_setting_t_caldacs_set)
    num_caldacs = property(_comedi.comedi_calibration_setting_t_num_caldacs_get, _comedi.comedi_calibration_setting_t_num_caldacs_set)
    soft_calibration = property(_comedi.comedi_calibration_setting_t_soft_calibration_get, _comedi.comedi_calibration_setting_t_soft_calibration_set)

    def __init__(self):
        _comedi.comedi_calibration_setting_t_swiginit(self, _comedi.new_comedi_calibration_setting_t())
    __swig_destroy__ = _comedi.delete_comedi_calibration_setting_t

# Register comedi_calibration_setting_t in _comedi:
_comedi.comedi_calibration_setting_t_swigregister(comedi_calibration_setting_t)

class comedi_calibration_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    driver_name = property(_comedi.comedi_calibration_t_driver_name_get, _comedi.comedi_calibration_t_driver_name_set)
    board_name = property(_comedi.comedi_calibration_t_board_name_get, _comedi.comedi_calibration_t_board_name_set)
    settings = property(_comedi.comedi_calibration_t_settings_get, _comedi.comedi_calibration_t_settings_set)
    num_settings = property(_comedi.comedi_calibration_t_num_settings_get, _comedi.comedi_calibration_t_num_settings_set)

    def __init__(self):
        _comedi.comedi_calibration_t_swiginit(self, _comedi.new_comedi_calibration_t())
    __swig_destroy__ = _comedi.delete_comedi_calibration_t

# Register comedi_calibration_t in _comedi:
_comedi.comedi_calibration_t_swigregister(comedi_calibration_t)


def comedi_parse_calibration_file(cal_file_path):
    return _comedi.comedi_parse_calibration_file(cal_file_path)

def comedi_apply_parsed_calibration(dev, subdev, channel, range, aref, calibration):
    return _comedi.comedi_apply_parsed_calibration(dev, subdev, channel, range, aref, calibration)

def comedi_get_default_calibration_path(dev):
    return _comedi.comedi_get_default_calibration_path(dev)

def comedi_cleanup_calibration(calibration):
    return _comedi.comedi_cleanup_calibration(calibration)

def comedi_apply_calibration(dev, subdev, channel, range, aref, cal_file_path):
    return _comedi.comedi_apply_calibration(dev, subdev, channel, range, aref, cal_file_path)
COMEDI_TO_PHYSICAL = _comedi.COMEDI_TO_PHYSICAL
COMEDI_FROM_PHYSICAL = _comedi.COMEDI_FROM_PHYSICAL

def comedi_get_softcal_converter(subdevice, channel, range, direction, calibration, OUTPUT):
    return _comedi.comedi_get_softcal_converter(subdevice, channel, range, direction, calibration, OUTPUT)

def comedi_get_hardcal_converter(dev, subdevice, channel, range, direction, OUTPUT):
    return _comedi.comedi_get_hardcal_converter(dev, subdevice, channel, range, direction, OUTPUT)

def comedi_to_physical(data, conversion_polynomial):
    return _comedi.comedi_to_physical(data, conversion_polynomial)

def comedi_from_physical(data, conversion_polynomial):
    return _comedi.comedi_from_physical(data, conversion_polynomial)

def comedi_internal_trigger(dev, subd, trignum):
    return _comedi.comedi_internal_trigger(dev, subd, trignum)

def comedi_arm(device, subdevice, source):
    return _comedi.comedi_arm(device, subdevice, source)

def comedi_arm_channel(device, subdevice, channel, source):
    return _comedi.comedi_arm_channel(device, subdevice, channel, source)

def comedi_disarm(device, subdevice):
    return _comedi.comedi_disarm(device, subdevice)

def comedi_disarm_channel(device, subdevice, channel):
    return _comedi.comedi_disarm_channel(device, subdevice, channel)

def comedi_reset(device, subdevice):
    return _comedi.comedi_reset(device, subdevice)

def comedi_reset_channel(device, subdevice, channel):
    return _comedi.comedi_reset_channel(device, subdevice, channel)

def comedi_get_clock_source(device, subdevice, channel):
    return _comedi.comedi_get_clock_source(device, subdevice, channel)

def comedi_get_gate_source(device, subdevice, channel, gate):
    return _comedi.comedi_get_gate_source(device, subdevice, channel, gate)

def comedi_get_routing(device, subdevice, channel):
    return _comedi.comedi_get_routing(device, subdevice, channel)

def comedi_set_counter_mode(device, subdevice, channel, mode_bits):
    return _comedi.comedi_set_counter_mode(device, subdevice, channel, mode_bits)

def comedi_set_clock_source(device, subdevice, channel, clock, period_ns):
    return _comedi.comedi_set_clock_source(device, subdevice, channel, clock, period_ns)

def comedi_set_filter(device, subdevice, channel, filter):
    return _comedi.comedi_set_filter(device, subdevice, channel, filter)

def comedi_set_gate_source(device, subdevice, channel, gate_index, gate_source):
    return _comedi.comedi_set_gate_source(device, subdevice, channel, gate_index, gate_source)

def comedi_set_other_source(device, subdevice, channel, other, source):
    return _comedi.comedi_set_other_source(device, subdevice, channel, other, source)

def comedi_set_routing(device, subdevice, channel, routing):
    return _comedi.comedi_set_routing(device, subdevice, channel, routing)

def comedi_get_hardware_buffer_size(device, subdevice, direction):
    return _comedi.comedi_get_hardware_buffer_size(device, subdevice, direction)

def comedi_digital_trigger_disable(device, subdevice, trigger_id):
    return _comedi.comedi_digital_trigger_disable(device, subdevice, trigger_id)

def comedi_digital_trigger_enable_edges(device, subdevice, trigger_id, base_input, rising_edge_inputs, falling_edge_inputs):
    return _comedi.comedi_digital_trigger_enable_edges(device, subdevice, trigger_id, base_input, rising_edge_inputs, falling_edge_inputs)

def comedi_digital_trigger_enable_levels(device, subdevice, trigger_id, base_input, high_level_inputs, low_level_inputs):
    return _comedi.comedi_digital_trigger_enable_levels(device, subdevice, trigger_id, base_input, high_level_inputs, low_level_inputs)

def comedi_get_cmd_timing_constraints(device, subdevice, scan_begin_src, scan_begin_min, convert_src, convert_min, chanlist, chanlist_len):
    return _comedi.comedi_get_cmd_timing_constraints(device, subdevice, scan_begin_src, scan_begin_min, convert_src, convert_min, chanlist, chanlist_len)

def comedi_test_route(device, source, destination):
    return _comedi.comedi_test_route(device, source, destination)

def comedi_connect_route(device, source, destination):
    return _comedi.comedi_connect_route(device, source, destination)

def comedi_disconnect_route(device, source, destination):
    return _comedi.comedi_disconnect_route(device, source, destination)
class comedi_route_pair(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    source = property(_comedi.comedi_route_pair_source_get, _comedi.comedi_route_pair_source_set)
    destination = property(_comedi.comedi_route_pair_destination_get, _comedi.comedi_route_pair_destination_set)

    def __init__(self):
        _comedi.comedi_route_pair_swiginit(self, _comedi.new_comedi_route_pair())
    __swig_destroy__ = _comedi.delete_comedi_route_pair

# Register comedi_route_pair in _comedi:
_comedi.comedi_route_pair_swigregister(comedi_route_pair)


def comedi_get_routes(device, routelist, n):
    return _comedi.comedi_get_routes(device, routelist, n)
class chanlist(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _comedi.chanlist_swiginit(self, _comedi.new_chanlist(nelements))
    __swig_destroy__ = _comedi.delete_chanlist

    def __getitem__(self, index):
        return _comedi.chanlist___getitem__(self, index)

    def __setitem__(self, index, value):
        return _comedi.chanlist___setitem__(self, index, value)

    def cast(self):
        return _comedi.chanlist_cast(self)

    @staticmethod
    def frompointer(t):
        return _comedi.chanlist_frompointer(t)

# Register chanlist in _comedi:
_comedi.chanlist_swigregister(chanlist)

def chanlist_frompointer(t):
    return _comedi.chanlist_frompointer(t)

class sampl_array(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _comedi.sampl_array_swiginit(self, _comedi.new_sampl_array(nelements))
    __swig_destroy__ = _comedi.delete_sampl_array

    def __getitem__(self, index):
        return _comedi.sampl_array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _comedi.sampl_array___setitem__(self, index, value)

    def cast(self):
        return _comedi.sampl_array_cast(self)

    @staticmethod
    def frompointer(t):
        return _comedi.sampl_array_frompointer(t)

# Register sampl_array in _comedi:
_comedi.sampl_array_swigregister(sampl_array)

def sampl_array_frompointer(t):
    return _comedi.sampl_array_frompointer(t)

class lsampl_array(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _comedi.lsampl_array_swiginit(self, _comedi.new_lsampl_array(nelements))
    __swig_destroy__ = _comedi.delete_lsampl_array

    def __getitem__(self, index):
        return _comedi.lsampl_array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _comedi.lsampl_array___setitem__(self, index, value)

    def cast(self):
        return _comedi.lsampl_array_cast(self)

    @staticmethod
    def frompointer(t):
        return _comedi.lsampl_array_frompointer(t)

# Register lsampl_array in _comedi:
_comedi.lsampl_array_swigregister(lsampl_array)

def lsampl_array_frompointer(t):
    return _comedi.lsampl_array_frompointer(t)

class insn_array(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _comedi.insn_array_swiginit(self, _comedi.new_insn_array(nelements))
    __swig_destroy__ = _comedi.delete_insn_array

    def __getitem__(self, index):
        return _comedi.insn_array___getitem__(self, index)

    def __setitem__(self, index, value):
        return _comedi.insn_array___setitem__(self, index, value)

    def cast(self):
        return _comedi.insn_array_cast(self)

    @staticmethod
    def frompointer(t):
        return _comedi.insn_array_frompointer(t)

# Register insn_array in _comedi:
_comedi.insn_array_swigregister(insn_array)

def insn_array_frompointer(t):
    return _comedi.insn_array_frompointer(t)


delete_comedi_prefix = False


# Add entries in module dictionary without comedi_/COMEDI_ prefix
import re
for k,v in globals().copy().items():
  if re.match('^comedi_', k, flags=re.IGNORECASE):
    globals()[k[7:]] = v
    if delete_comedi_prefix:
        globals().pop(k) # Break backwards compatibility
del re, k, v, delete_comedi_prefix



